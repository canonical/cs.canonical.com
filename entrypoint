#! /usr/bin/env bash

set -euo pipefail
export FLASK_APP=webapp.app

activate() {
    # Create or activate virtualenv
    if [ ! -d ./.venv ]; then
        python3 -m venv .venv
        . ./.venv/bin/activate
        pip install --no-cache-dir -r requirements.txt
    else
        . ./.venv/bin/activate
    fi
}

{
    activate

    # Provision database
    # ===
    flask --app webapp.app db upgrade

    RUN_COMMAND="gunicorn webapp.app:app --name $(hostname) --workers=2 --bind $1"

    # Start Celery worker if Redis is available
    if [ ! -z ${REDIS_HOST+x} ]; then
        CELERY_COMMAND="celery -A webapp.app.celery_app worker -B  --loglevel="
        if [ ! -z ${FLASK_DEBUG+x} ]; then
            CELERY_COMMAND="${CELERY_COMMAND}debug"
        else
            CELERY_COMMAND="${CELERY_COMMAND}info"
        fi
        ${CELERY_COMMAND} &
    fi

    if [ -z ${FLASK_DEBUG+x} ]; then
        RUN_COMMAND="${RUN_COMMAND} --reload --log-level debug --timeout 9999"
    fi

    ${RUN_COMMAND}
}
